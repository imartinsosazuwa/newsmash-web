{"version":3,"sources":["serviceWorker.js","reducers/mixReducer.js","reducers/mashReducer.js","reducers/index.js","containers/Search.js","config/APIEndpoints.js","actions/mixActions.js","actions/mashActions.js","components/Navbar.js","components/TopLinks.js","components/MashLink.js","components/RecentMashes.js","containers/MySidebar.js","components/MixItem.js","components/LoadingSpinner.js","components/Mix.js","containers/MixContainer.js","components/Mash.js","components/history.js","components/SaveElement.js","containers/MashContainer.js","components/RoutingError.js","containers/ErrorBoundary.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","mixReducer","state","arguments","length","undefined","stories","loading","action","type","Object","objectSpread","payload","mashReducer","topic","words","recentMashes","saving","saved","error","rootReducer","combineReducers","mix","mash","Search","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","text","target","value","handleSubmit","preventDefault","handleMashRequest","props","history","push","concat","_","kebabCase","handleMixRequest","react_default","a","createElement","className","onSubmit","onChange","autoFocus","onClick","Component","APIRoot","APIEndpoints","NEW_MASH","MASHES","SAVED_MASHES","NEW_MIX","fetchMixSearch","request","method","headers","Accept","Content-Type","body","JSON","stringify","dispatch","fetch","then","res","json","data","catch","console","getMashWords","getRecentMashes","Navbar","src","alt","containers_Search","fetchMashSearch","connect","TopLinks","Link","to","MashLink","_ref","path","id","topicTitleCase","startCase","replace","likes","RecentMashes","map","key","MySidebar","onSetSidebarOpen","sidebarOpen","react_sidebar_esm","sidebar","components_TopLinks","components_RecentMashes","open","onSetOpen","styles","background","Story","href","url","headline","source","description","LoadingSpinner","Mix","mixDisplay","_props$mix","story","MixItem","title","name","MixContainer","prevProps","renderMix","pathname","searchTerm","params","_this$props","fetchMix","topicSlug","mashLink","containers_MySidebar","components_Mix","mashConfig","options","stepRadius","stepAngle","cache","style","fontFamily","hoverState","backgroundColor","borderColor","fontColor","textAlpha","colorType","palette","Mash","zingchart_react_min","height","width","createBrowserHistory","SaveElement","saveElement","saveMash","setSaved","handleClick","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","Fragment","MashContainer","renderMash","_this$props$match$par","getTopMash","getMashById","setRecentMash","getOlderSavedMash","recentMash","find","parseInt","mashDisplay","mixLink","_this$props$mash","_this$props3","Mash_Mash","ok","Error","RoutingError","ErrorBoundary","hasError","info","children","React","App","BrowserRouter","Route","component","ErrorBoundary_ErrorBoundary","Switch","exact","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4866b372.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const mixReducer = (\n  state = {\n    stories: [],\n    loading: false,\n  },\n  action) => {\n  switch (action.type) {\n    case 'START_FETCH_MIX':\n      return {\n        ...state,\n        stories: [],\n        loading: true,\n      };\n    case 'FETCH_MIX':\n      return {\n        ...state,\n        stories: action.payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default mixReducer;\n","const mashReducer = (\n  state = {\n    topic: '',\n    words: [],\n    recentMashes: [],\n    loading: false,\n    saving: false,\n    saved: false,\n    error: false,\n  },\n  action\n) => {\n  switch (action.type) {\n    case 'START_FETCH_MASH':\n      return {\n        ...state,\n        words: [],\n        loading: true,\n        saving: false,\n        saved: false,\n        error: false,\n      };\n    case 'FETCH_MASH':\n      return {\n        ...state,\n        topic: action.payload.topic,\n        words: action.payload.words,\n        loading: false,\n      };\n    case 'START_FETCH_SAVED_MASH':\n      return {\n        ...state,\n        topic: action.payload,\n        words: [],\n        loading: true,\n        saving: false,\n        saved: false,\n        error: false,\n      };\n    case 'START_SAVE_MASH':\n      return {\n        ...state,\n        saving: true,\n        loading: false,\n        saved: false,\n        error: false,\n      };\n    case 'COMPLETE_SAVE':\n      return {\n        ...state,\n        saving: false,\n        saved: true,\n      };\n\n    case 'FETCH_RECENT_MASH_LIST':\n      return {\n        ...state,\n        recentMashes: action.payload,\n      };\n    case 'START_SET_RECENT_MASH':\n      return {\n        ...state,\n        topic: action.payload,\n        loading: false,\n        saving: false,\n        saved: false,\n        error: false,\n      };\n    case 'SET_RECENT_MASH':\n      return {\n        ...state,\n        words: action.payload,\n        error: false,\n        saved: true,\n      };\n    case 'SET_TOPIC':\n      return {\n        ...state,\n        topic: action.payload,\n      };\n    case 'SET_SAVED':\n      return {\n        ...state,\n        saved: true,\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        loading: false,\n        saved: false,\n        error: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default mashReducer;\n","import { combineReducers } from 'redux';\nimport mixReducer from './mixReducer';\nimport mashReducer from './mashReducer';\n\nconst rootReducer = combineReducers({\n  mix: mixReducer,\n  mash: mashReducer\n});\nexport default rootReducer;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport _ from 'lodash';\n\nconst PROPTYPES = {\n  getContent: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n};\n\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      text: '',\n    };\n  }\n\n  handleChange = event => {\n    this.setState({\n      text: event.target.value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  handleMashRequest = () => {\n    this.props.history.push(`/mashes/${_.kebabCase(this.state.text)}`);\n    this.setState({\n      text: '',\n    });\n  };\n\n  handleMixRequest = () => {\n    this.props.history.push(`/mixes/${_.kebabCase(this.state.text)}`);\n    this.setState({\n      text: '',\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className=\"form-inline\" onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              value={this.state.text}\n              onChange={this.handleChange}\n              className=\"form-control mr-sm-2\"\n              autoFocus\n            />\n          </div>\n          <input\n            type=\"submit\"\n            className=\"btn btn-secondary mr-sm-2\"\n            value={'Mix it'}\n            onClick={this.handleMixRequest}\n          />\n          <input\n            type=\"submit\"\n            className=\"btn btn-secondary\"\n            value={'Mash it'}\n            onClick={this.handleMashRequest}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = PROPTYPES;\n\nexport default Search;\n","// const APIRoot = 'http://localhost:3001';\nconst APIRoot = 'https://newsmashed-api.herokuapp.com/api/v1';\n\nexport default {\n  NEW_MASH: APIRoot + '/mashes/data',\n  MASHES: APIRoot + '/mashes',\n  SAVED_MASHES: APIRoot + '/mashes/recent',\n  NEW_MIX: APIRoot + '/mixes/data',\n};\n","import APIEndpoints from '../config/APIEndpoints';\n\nexport const fetchMix = () => {\n  // returns a function that dispatches an action with data to the redux store\n  return dispatch => {\n    dispatch({ type: 'START_FETCH_MIX' });\n    return fetch(APIEndpoints.NEW_MIX)\n      .then(res => res.json())\n      .then(data => {\n        return dispatch({\n          type: 'FETCH_MIX',\n          payload: data,\n        });\n      })\n      .catch(error => console.error('ERROR', error));\n  };\n};\n\nexport const fetchMixSearch = (text) => {\n  let request = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(text)\n  };\n  return dispatch => {\n    dispatch({ type: 'START_FETCH_MIX' });\n    return fetch(APIEndpoints.NEW_MIX, request)\n      .then(res => res.json())\n      .then(data => {\n        dispatch({\n          type: 'FETCH_MIX',\n          payload: data,\n        });\n      })\n      .catch(error => console.error(error));\n  };\n};\n","import APIEndpoints from '../config/APIEndpoints';\n\nexport const getMashWords = text => {\n  const request = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(text),\n  };\n  return dispatch => {\n    dispatch({ type: 'SET_TOPIC', payload: text });\n    dispatch({ type: 'START_FETCH_MASH' });\n    return fetch(APIEndpoints.NEW_MASH, request)\n      .then(res => res.json())\n      .then(data => {\n        dispatch({\n          type: 'FETCH_MASH',\n          topic: data.topic,\n          payload: data,\n        });\n      })\n      .catch(error => {\n        dispatch({\n          type: 'SET_ERROR',\n        });\n      });\n  };\n};\n\nexport const getTopMash = () => {\n  // console.log('AppConstants', AppConstants)\n  return dispatch => {\n    dispatch({ type: 'SET_TOPIC', payload: 'Top stories' });\n    dispatch({ type: 'START_FETCH_MASH' });\n    return fetch(APIEndpoints.NEW_MASH)\n      .then(res => res.json())\n      .then(data => {\n        dispatch({\n          type: 'FETCH_MASH',\n          payload: data,\n        });\n      })\n      .catch(error => {\n        console.error(error);\n        dispatch({\n          type: 'SET_ERROR',\n        });\n      });\n  };\n};\n\nexport const saveMash = data => {\n  const request = {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  };\n  return dispatch => {\n    dispatch({ type: 'START_SAVE_MASH' });\n    return fetch(APIEndpoints.MASHES, request)\n      .then(res => (res.ok ? res : new Error(res)))\n      .then(res => res.json())\n      .then(data => {\n        dispatch({ type: 'COMPLETE_SAVE' });\n        return fetch('/api/v1/mashes/recent')\n          .then(res => res.json())\n          .then(data => {\n            dispatch({\n              type: 'FETCH_RECENT_MASH_LIST',\n              payload: data,\n            });\n          })\n          .catch(error => console.error(error));\n      });\n  };\n};\n\nexport const getRecentMashes = () => {\n  return dispatch => {\n    return fetch(APIEndpoints.SAVED_MASHES)\n      .then(res => res.json())\n      .then(data => {\n        dispatch({\n          type: 'FETCH_RECENT_MASH_LIST',\n          payload: data,\n        });\n      })\n      .catch(error => console.error(error));\n  };\n};\n\nexport const getOlderSavedMash = id => {\n  return dispatch => {\n    dispatch({ type: 'START_FETCH_SAVED_MASH' });\n    return fetch(APIEndpoints.MASHES + id)\n      .then(res => res.json())\n      .then(data => {\n        dispatch({\n          type: 'FETCH_MASH',\n          payload: data,\n        });\n      })\n      .catch(error => console.error(error));\n  };\n};\n\nexport const setRecentMash = mash => {\n  return dispatch => {\n    dispatch({ type: 'SET_TOPIC', payload: mash.topic });\n    dispatch({ type: 'START_SET_RECENT_MASH', payload: mash.topic });\n    dispatch({\n      type: 'SET_RECENT_MASH',\n      payload: mash.words,\n    });\n  };\n};\n\nexport const setSaved = () => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_SAVED',\n    });\n  };\n};\n\nexport const setError = () => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_ERROR',\n    });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import { Link } from 'react-router-dom';\nimport Search from '../containers/Search';\nimport { fetchMixSearch } from '../actions/mixActions';\nimport { getMashWords } from '../actions/mashActions';\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark navbar-container\">\n          <div className=\"navbar-item\">\n            <img src=\"/logo-white.png\" alt=\"newsmash-logo\" />\n          </div>\n          <div className=\"navbar-item\">\n            <Search\n              fetchMixSearch={this.props.fetchMixSearch}\n              fetchMashSearch={this.props.getMashWords}\n              history={this.props.history}\n            />\n          </div>\n        </nav>\n      </div>\n    );\n  }\n};\n\nexport default connect(null, { fetchMixSearch, getMashWords })(Navbar);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst TopLinks = () => {\n  return (\n    <div className=\"top-links-container\">\n      <div className=\"sidebar-heading\">Top Stories</div>\n      <div className=\"sidebar-link\">\n        <Link to=\"/mixes\">Get a mix</Link>\n      </div>\n      <div className=\"sidebar-link\">\n        <Link to=\"/mashes\">Get a mash</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default TopLinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\n\nexport default function MashLink({ mash }) {\n  const path = `/mashes/saved/${mash.id}`;\n  const topicTitleCase = _.startCase(_.replace(mash.topic, /-/g, ' '));\n  return (\n    <div className=\"sidebar-link\">\n      <Link to={path}>{topicTitleCase}</Link>\n      <span>{mash.likes}</span>\n    </div>\n  );\n}\n","import React from 'react';\nimport MashLink from './MashLink';\n\nconst RecentMashes = props => {\n  return (\n    <div className=\"sidebar-container\">\n      <div className=\"sidebar-heading\">Saved Mashes</div>\n      {props.recentMashes.map(mash => (\n        <MashLink key={mash.id} mash={mash} />\n      ))}\n    </div>\n  );\n};\n\nexport default RecentMashes;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Sidebar from 'react-sidebar';\nimport TopLinks from '../components/TopLinks';\nimport { getRecentMashes } from '../actions/mashActions';\nimport RecentMashes from '../components/RecentMashes';\n\nclass MySidebar extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      sidebarOpen: false,\n    };\n  }\n\n  onSetSidebarOpen = () => {\n    // let toggleOpen = ;\n    this.setState({ sidebarOpen: !this.state.sidebarOpen });\n  };\n\n  componentDidMount() {\n    this.props.getRecentMashes();\n  }\n\n  render() {\n    return (\n      <Sidebar\n        sidebar={\n          <div className=\"sidebar\">\n            <TopLinks />\n            <RecentMashes recentMashes={this.props.recentMashes} />\n          </div>\n        }\n        open={this.state.sidebarOpen}\n        onSetOpen={this.onSetSidebarOpen}\n        styles={{ sidebar: { background: 'white' } }}\n      >\n        <button className=\"hamburger hamburger--spin\" type=\"button\" onClick={this.onSetSidebarOpen}>\n          <span className=\"hamburger-box toggle-sidebar-btn\">\n            <span className=\"hamburger-inner\"></span>\n          </span>\n        </button>\n      </Sidebar>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  recentMashes: state.mash.recentMashes,\n});\n\nexport default connect(\n  mapStateToProps,\n  { getRecentMashes }\n)(MySidebar);\n","import React from 'react';\n\nconst Story = props => {\n  return (\n    <div className=\"mix-item\">\n      {/* <a href={props.story.url}><img src={props.story.urlToImage} alt=\"news photo\" /></a> */}\n      <div className=\"mix-headline\"><a href={props.url}>{props.headline}</a></div>\n      <span className=\"news-source\">{props.source}</span>\n      <span className=\"news-content\"> {props.description}</span>\n    </div>\n  );\n};\n\nexport default Story;\n","import React from 'react';\n\nexport default function LoadingSpinner() {\n  return (\n    <div id=\"spinner\" className=\"container\">\n      <div className=\"row\">\n        <div id=\"loader\">\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n          <div className=\"dot\" />\n          <div className=\"lading\" />\n        </div>\n      </div>\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n}\n","import React from 'react';\nimport MixItem from './MixItem';\nimport LoadingSpinner from './LoadingSpinner';\n\nconst Mix = props => {\n  const { stories, loading } = props.mix;\n\n  let mixDisplay;\n  if (loading) {\n    mixDisplay = <LoadingSpinner />;\n  } else if (stories.length) {\n    mixDisplay = stories.map(story => {\n      return (\n        <MixItem\n          key={story.url}\n          headline={story.title}\n          source={story.name}\n          description={story.description}\n          url={story.url}\n        />\n      );\n    });\n  } else {\n    mixDisplay = (\n      <div className=\"loading-message\">\n        Hmm, no stories found. Try searching again.\n      </div>\n    );\n  }\n\n  return <div>{mixDisplay}</div>;\n};\n\nexport default Mix;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport { fetchMix, fetchMixSearch } from '../actions/mixActions';\nimport Mix from '../components/Mix';\nimport MySidebar from './MySidebar';\n\nconst PROPTYPES = {\n  fetchMix: PropTypes.func,\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n  }),\n  match: PropTypes.shape({\n    params: PropTypes.shape({ topic: PropTypes.string }),\n  }),\n  mix: PropTypes.shape({\n    stories: PropTypes.array,\n    loading: PropTypes.bool,\n  }),\n  fetchMixSearch: PropTypes.func,\n};\n\nclass MixContainer extends Component {\n  componentDidMount(prevProps) {\n    this.renderMix();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.renderMix();\n    }\n  }\n\n  renderMix() {\n    const searchTerm = this.props.match.params.topic;\n    const { fetchMixSearch, fetchMix } = this.props;\n\n    searchTerm ? fetchMixSearch(searchTerm) : fetchMix();\n  }\n\n  render() {\n    const topicSlug = this.props.match.params.topic;\n    const headline = topicSlug\n      ? `${_.startCase(_.replace(topicSlug, /-/g, ' '))} Mix`\n      : 'Top Stories Mix';\n    const mashLink = topicSlug || '';\n\n    return (\n      <div className=\"mix-container main-content\">\n      <MySidebar />\n        <div className=\"headline\">{headline}</div>\n        <Mix mix={this.props.mix} />\n        <Link to={`/mashes/${mashLink}`} className=\"toggle-button\">\n          Get mash\n        </Link>\n      </div>\n    );\n  }\n}\n\nMixContainer.propTypes = PROPTYPES;\n\nconst mapStateToProps = state => {\n  return { mix: state.mix };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchMix, fetchMixSearch }\n)(MixContainer);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { core as WordMash } from 'zingchart-react';\n\nconst PROPTYPES = {\n  words: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      count: PropTypes.number,\n      url: PropTypes.string,\n    })\n  ),\n};\n\nconst mashConfig = words => {\n  return {\n    type: 'wordcloud',\n    options: {\n      words: words,\n      stepRadius: 55,\n      stepAngle: 10,\n      // dataurl: 'resources/cachedchart.json',\n      cache: {\n        data: true,\n      },\n      style: {\n        fontFamily: 'Zilla Slab',\n        hoverState: {\n          backgroundColor: 'white',\n          borderColor: 0,\n          fontColor: 'black',\n          textAlpha: 1,\n        },\n      },\n      colorType: 'palette',\n      palette: [\n        '#2196F3',\n        '#3F51B5',\n        '#42A5F5',\n        '#5C6BC0',\n        '#64B5F6',\n        '#7986CB',\n        '#90CAF9',\n        '#9FA8DA',\n        '#BBDEFB',\n        '#C5CAE9',\n      ],\n    },\n  };\n};\n\nexport default class Mash extends Component {\n  render() {\n    const { words } = this.props;\n    if (words && words.length) {\n      return (\n        <div>\n          <WordMash\n            id=\"mash-canvas\"\n            height=\"400\"\n            width=\"100%\"\n            data={mashConfig(words)}\n          />\n        </div>\n      );\n    }\n    return <div />;\n  }\n}\n\nMash.propTypes = PROPTYPES;\n","import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();\n","import React from 'react';\nimport history from './history';\n\nexport default function SaveElement(props) {\n  const { id, mash, saving, saved, saveMash, setSaved } = props;\n  const handleClick = async () => {\n    await saveMash(mash);\n    history.push(`/mashes/saved/${props.recentMashes[0].id}`);\n    setSaved();\n  };\n\n  let saveElement;\n  if (saving) {\n    saveElement = (\n      <div className=\"star saving-label\">&#9733; Saving</div>\n    );\n  } else if (id || saved) {\n    saveElement = <div className=\"star saved-label\">&#9733; Saved</div>;\n  } else {\n    saveElement = (\n      <div className=\"star save-button\" onClick={handleClick}>\n        &#9733; Save\n      </div>\n    );\n  }\n\n  return <React.Fragment>{saveElement}</React.Fragment>;\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport Mash from '../components/Mash';\nimport SaveElement from '../components/SaveElement';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport MySidebar from './MySidebar';\nimport {\n  getMashWords,\n  getTopMash,\n  getRecentMashes,\n  saveMash,\n  getOlderSavedMash,\n  setSaved,\n  setRecentMash,\n} from '../actions/mashActions';\n\nconst PROPTYPES = {\n  mash: PropTypes.shape({\n    id: PropTypes.number,\n    words: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string,\n        count: PropTypes.number,\n      })\n    ),\n    topic: PropTypes.string,\n    loading: PropTypes.bool,\n    saving: PropTypes.bool,\n    saved: PropTypes.bool,\n    error: PropTypes.bool,\n    recentMashes: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string,\n        count: PropTypes.number,\n      })\n    ),\n  }),\n  getMashWords: PropTypes.func,\n  getTopMash: PropTypes.func,\n  getRecentMashes: PropTypes.func,\n  saveMash: PropTypes.func,\n  getOlderSavedMash: PropTypes.func,\n  setRecentMash: PropTypes.func,\n  setSaved: PropTypes.func,\n};\n\nclass MashContainer extends Component {\n  componentDidMount() {\n    this.renderMash();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.renderMash();\n    }\n  }\n\n  renderMash() {\n    const { topic, id } = this.props.match.params;\n    const { getTopMash, getMashWords } = this.props;\n\n    if (topic) {\n      getMashWords(topic);\n    } else if (id) {\n      this.getMashById(id);\n    } else {\n      getTopMash();\n    }\n  }\n\n  async getMashById(id) {\n    await this.props.getRecentMashes();\n\n    const { recentMashes, setRecentMash, getOlderSavedMash } = this.props;\n    const recentMash = recentMashes.find(mash => mash.id === parseInt(id));\n\n    if (recentMash) {\n      setRecentMash(recentMash);\n    } else {\n      getOlderSavedMash(id);\n    }\n  }\n\n  render() {\n    const { topic, words, loading, saving, saved, error } = this.props.mash;\n    const { id } = this.props.match.params;\n    const { mash, recentMashes, saveMash, setSaved } = this.props;\n\n    const topicTitleCase = topic\n      ? `${_.startCase(_.replace(topic, /-/g, ' '))} Mash`\n      : 'Just a moment...';\n\n    let mashDisplay;\n    if (loading) {\n      mashDisplay = <LoadingSpinner />;\n    } else if (error) {\n      mashDisplay = (\n        <div className=\"loading-message\">\n          Something is amiss. Please try again.\n        </div>\n      );\n    } else {\n      mashDisplay = <Mash words={words} />;\n    }\n\n    let mixLink;\n    if (this.props.match.params.topic) {\n      mixLink = this.props.match.params.topic;\n    } else if (topic === 'top stories') {\n      mixLink = '';\n    } else if (saved) {\n      mixLink = _.kebabCase(topic);\n    } else {\n      mixLink = '';\n    }\n    \n    return (\n      <div className=\"mash-container main-content\">\n        <MySidebar />\n        <div className=\"headline\">{topicTitleCase}</div>\n        <SaveElement\n          {...{ id, mash, saving, saved, saveMash, setSaved, recentMashes }}\n        />\n        <Link\n          to={`/mixes/${mixLink}`}\n          className=\"toggle-button\"\n        >\n          Get mix\n        </Link>\n        {mashDisplay}\n        <div id=\"mash-canvas\" />\n      </div>\n    );\n  }\n}\n\nMashContainer.propTypes = PROPTYPES;\n\nconst mapStateToProps = state => {\n  return { mash: state.mash, recentMashes: state.mash.recentMashes };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMashWords,\n    getTopMash,\n    getRecentMashes,\n    saveMash,\n    getOlderSavedMash,\n    setRecentMash,\n    setSaved,\n  }\n)(MashContainer);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function RoutingError() {\n  return (\n    <div className=\"center-hv\">\n      <h2>Oops, page not found</h2>\n      <h5>\n        <Link to=\"/\">Try mashing up top headlines</Link>\n      </h5>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h2 className=\"center-hv\">Something's gone wrong</h2>;\n    }\n    return this.props.children;\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Sidebar from './containers/MySidebar';\nimport MixContainer from './containers/MixContainer';\nimport MashContainer from './containers/MashContainer';\nimport RoutingError from './components/RoutingError';\nimport ErrorBoundary from './containers/ErrorBoundary';\n\nconst App = () => {\n  return (\n    <Router>\n      <React.Fragment>\n          <Route path=\"/\" component={Navbar} />\n          {/* <Route path=\"/\" component={Sidebar} /> */}\n          <ErrorBoundary>\n            <Switch>\n              <Route exact path=\"/\" component={MashContainer} />\n              <Route exact path=\"/mixes\" component={MixContainer} />\n              <Route exact path=\"/mixes/:topic\" component={MixContainer} />\n              <Route exact path=\"/mashes/saved/:id\" component={MashContainer} />)} />\n              <Route exact path=\"/mashes/:topic\" component={MashContainer} />\n              <Route exact path=\"/mashes\" component={MashContainer} />\n              <Route component={RoutingError} />\n            </Switch>\n          </ErrorBoundary>\n      </React.Fragment>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './reducers/index';\nimport './index.css';\nimport App from './App';\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}